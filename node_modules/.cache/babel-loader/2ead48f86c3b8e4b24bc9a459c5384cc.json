{"ast":null,"code":"var _jsxFileName = \"D:\\\\Solana\\\\metaplex\\\\metaplex-master\\\\js\\\\packages\\\\fair-launch\\\\src\\\\MintButton.tsx\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport { CircularProgress } from '@material-ui/core';\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CTAButton = styled(Button)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`; // add your styles here\n\n_c = CTAButton;\nexport const MintButton = _ref => {\n  _s();\n\n  var _fairLaunch$ticket, _fairLaunch$ticket$da, _fairLaunch$ticket2, _fairLaunch$ticket2$d;\n\n  let {\n    onMint,\n    candyMachine,\n    fairLaunch,\n    isMinting,\n    fairLaunchBalance\n  } = _ref;\n  const {\n    requestGatewayToken,\n    gatewayStatus\n  } = useGateway();\n  const [clicked, setClicked] = useState(false);\n  useEffect(() => {\n    if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\n      console.log('Minting');\n      onMint();\n      setClicked(false);\n    }\n  }, [gatewayStatus, clicked, setClicked, onMint]);\n  return /*#__PURE__*/_jsxDEV(CTAButton, {\n    disabled: (candyMachine === null || candyMachine === void 0 ? void 0 : candyMachine.state.isSoldOut) || isMinting || !(candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isActive) || (fairLaunch === null || fairLaunch === void 0 ? void 0 : (_fairLaunch$ticket = fairLaunch.ticket) === null || _fairLaunch$ticket === void 0 ? void 0 : (_fairLaunch$ticket$da = _fairLaunch$ticket.data) === null || _fairLaunch$ticket$da === void 0 ? void 0 : _fairLaunch$ticket$da.state.punched) && fairLaunchBalance === 0,\n    onClick: async () => {\n      setClicked(true);\n\n      if (candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isActive && candyMachine !== null && candyMachine !== void 0 && candyMachine.state.gatekeeper) {\n        if (gatewayStatus === GatewayStatus.ACTIVE) {\n          setClicked(true);\n        } else {\n          await requestGatewayToken();\n        }\n      } else {\n        await onMint();\n        setClicked(false);\n      }\n    },\n    variant: \"contained\",\n    children: fairLaunch !== null && fairLaunch !== void 0 && (_fairLaunch$ticket2 = fairLaunch.ticket) !== null && _fairLaunch$ticket2 !== void 0 && (_fairLaunch$ticket2$d = _fairLaunch$ticket2.data) !== null && _fairLaunch$ticket2$d !== void 0 && _fairLaunch$ticket2$d.state.punched && fairLaunchBalance === 0 ? 'MINTED' : candyMachine !== null && candyMachine !== void 0 && candyMachine.state.isSoldOut ? 'SOLD OUT' : isMinting ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : 'MINT'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MintButton, \"C4iCClLy0038vDkrez1VZOKsNPU=\", false, function () {\n  return [useGateway];\n});\n\n_c2 = MintButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CTAButton\");\n$RefreshReg$(_c2, \"MintButton\");","map":{"version":3,"sources":["D:/Solana/metaplex/metaplex-master/js/packages/fair-launch/src/MintButton.tsx"],"names":["styled","Button","CircularProgress","GatewayStatus","useGateway","useEffect","useState","CTAButton","MintButton","onMint","candyMachine","fairLaunch","isMinting","fairLaunchBalance","requestGatewayToken","gatewayStatus","clicked","setClicked","ACTIVE","console","log","state","isSoldOut","isActive","ticket","data","punched","gatekeeper"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,6BAA1C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,OAAO,MAAMC,SAAS,GAAGP,MAAM,CAACC,MAAD,CAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATO,C,CASJ;;KATUM,S;AAWb,OAAO,MAAMC,UAAU,GAAG,QAYpB;AAAA;;AAAA;;AAAA,MAZqB;AACzBC,IAAAA,MADyB;AAEzBC,IAAAA,YAFyB;AAGzBC,IAAAA,UAHyB;AAIzBC,IAAAA,SAJyB;AAKzBC,IAAAA;AALyB,GAYrB;AACJ,QAAM;AAAEC,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAAyCX,UAAU,EAAzD;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,aAAa,KAAKZ,aAAa,CAACe,MAAhC,IAA0CF,OAA9C,EAAuD;AACrDG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAX,MAAAA,MAAM;AACNQ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GANQ,EAMN,CAACF,aAAD,EAAgBC,OAAhB,EAAyBC,UAAzB,EAAqCR,MAArC,CANM,CAAT;AAOA,sBACE,QAAC,SAAD;AACE,IAAA,QAAQ,EACN,CAAAC,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEW,KAAd,CAAoBC,SAApB,KACAV,SADA,IAEA,EAACF,YAAD,aAACA,YAAD,eAACA,YAAY,CAAEW,KAAd,CAAoBE,QAArB,CAFA,IAGC,CAAAZ,UAAU,SAAV,IAAAA,UAAU,WAAV,kCAAAA,UAAU,CAAEa,MAAZ,mGAAoBC,IAApB,gFAA0BJ,KAA1B,CAAgCK,OAAhC,KAA2Cb,iBAAiB,KAAK,CALtE;AAOE,IAAA,OAAO,EAAE,YAAY;AACnBI,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAIP,YAAY,SAAZ,IAAAA,YAAY,WAAZ,IAAAA,YAAY,CAAEW,KAAd,CAAoBE,QAApB,IAAgCb,YAAhC,aAAgCA,YAAhC,eAAgCA,YAAY,CAAEW,KAAd,CAAoBM,UAAxD,EAAoE;AAClE,YAAIZ,aAAa,KAAKZ,aAAa,CAACe,MAApC,EAA4C;AAC1CD,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD,SAFD,MAEO;AACL,gBAAMH,mBAAmB,EAAzB;AACD;AACF,OAND,MAMO;AACL,cAAML,MAAM,EAAZ;AACAQ,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAnBH;AAoBE,IAAA,OAAO,EAAC,WApBV;AAAA,cAsBGN,UAAU,SAAV,IAAAA,UAAU,WAAV,2BAAAA,UAAU,CAAEa,MAAZ,6FAAoBC,IAApB,wEAA0BJ,KAA1B,CAAgCK,OAAhC,IAA2Cb,iBAAiB,KAAK,CAAjE,GACC,QADD,GAEGH,YAAY,SAAZ,IAAAA,YAAY,WAAZ,IAAAA,YAAY,CAAEW,KAAd,CAAoBC,SAApB,GACF,UADE,GAEAV,SAAS,gBACX,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADW,GAGX;AA7BJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAzDM;;GAAMJ,U;UAaoCJ,U;;;MAbpCI,U","sourcesContent":["import styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport { CandyMachineAccount } from './candy-machine';\nimport { FairLaunchAccount } from './fair-launch';\nimport { CircularProgress } from '@material-ui/core';\nimport { GatewayStatus, useGateway } from '@civic/solana-gateway-react';\nimport { useEffect, useState } from 'react';\n\nexport const CTAButton = styled(Button)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`; // add your styles here\n\nexport const MintButton = ({\n  onMint,\n  candyMachine,\n  fairLaunch,\n  isMinting,\n  fairLaunchBalance,\n}: {\n  onMint: () => Promise<void>;\n  candyMachine: CandyMachineAccount | undefined;\n  fairLaunch?: FairLaunchAccount | undefined;\n  isMinting: boolean;\n  fairLaunchBalance: number;\n}) => {\n  const { requestGatewayToken, gatewayStatus } = useGateway();\n  const [clicked, setClicked] = useState(false);\n\n  useEffect(() => {\n    if (gatewayStatus === GatewayStatus.ACTIVE && clicked) {\n      console.log('Minting');\n      onMint();\n      setClicked(false);\n    }\n  }, [gatewayStatus, clicked, setClicked, onMint]);\n  return (\n    <CTAButton\n      disabled={\n        candyMachine?.state.isSoldOut ||\n        isMinting ||\n        !candyMachine?.state.isActive ||\n        (fairLaunch?.ticket?.data?.state.punched && fairLaunchBalance === 0)\n      }\n      onClick={async () => {\n        setClicked(true);\n        if (candyMachine?.state.isActive && candyMachine?.state.gatekeeper) {\n          if (gatewayStatus === GatewayStatus.ACTIVE) {\n            setClicked(true);\n          } else {\n            await requestGatewayToken();\n          }\n        } else {\n          await onMint();\n          setClicked(false);\n        }\n      }}\n      variant=\"contained\"\n    >\n      {fairLaunch?.ticket?.data?.state.punched && fairLaunchBalance === 0 ? (\n        'MINTED'\n      ) : candyMachine?.state.isSoldOut ? (\n        'SOLD OUT'\n      ) : isMinting ? (\n        <CircularProgress />\n      ) : (\n        'MINT'\n      )}\n    </CTAButton>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
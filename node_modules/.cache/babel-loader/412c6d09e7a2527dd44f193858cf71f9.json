{"ast":null,"code":"import * as anchor from '@project-serum/anchor';\nimport { TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\nimport { createAssociatedTokenAccountInstruction, getAtaForMint, getFairLaunchTicketSeqLookup } from './utils';\nexport const FAIR_LAUNCH_PROGRAM = new anchor.web3.PublicKey('faircnAB9k59Y4TXmLabBULeuTLgV7TkGMGNkjnA15j');\nexport let LotteryState;\n\n(function (LotteryState) {\n  LotteryState[\"Brewing\"] = \"Brewing\";\n  LotteryState[\"Finished\"] = \"Finished\";\n  LotteryState[\"PastDue\"] = \"Past Due\";\n})(LotteryState || (LotteryState = {}));\n\nexport const getLotteryState = (phaseThree, lottery, lotteryDuration, phaseTwoEnd) => {\n  if (!phaseThree && (!lottery || lottery.length === 0) && phaseTwoEnd.add(lotteryDuration).lt(new anchor.BN(Date.now() / 1000))) {\n    return LotteryState.PastDue;\n  } else if (phaseThree) {\n    return LotteryState.Finished;\n  } else {\n    return LotteryState.Brewing;\n  }\n};\nexport const getFairLaunchState = async (anchorWallet, fairLaunchId, connection) => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: 'recent'\n  });\n  const idl = await anchor.Program.fetchIdl(FAIR_LAUNCH_PROGRAM, provider);\n  const program = new anchor.Program(idl, FAIR_LAUNCH_PROGRAM, provider);\n  const state = await program.account.fairLaunch.fetch(fairLaunchId);\n  const [fairLaunchTicket, bump] = await getFairLaunchTicket( //@ts-ignore\n  state.tokenMint, anchorWallet.publicKey);\n  let fairLaunchData;\n\n  try {\n    fairLaunchData = await program.account.fairLaunchTicket.fetch(fairLaunchTicket);\n  } catch {\n    console.log('No ticket');\n  }\n\n  const treasury = await program.provider.connection.getBalance(state.treasury);\n  let lotteryData = new Uint8Array([]);\n  let fairLaunchLotteryBitmap = (await getFairLaunchLotteryBitmap( //@ts-ignore\n  state.tokenMint))[0];\n\n  try {\n    const fairLaunchLotteryBitmapObj = await program.provider.connection.getAccountInfo(fairLaunchLotteryBitmap);\n    lotteryData = new Uint8Array((fairLaunchLotteryBitmapObj === null || fairLaunchLotteryBitmapObj === void 0 ? void 0 : fairLaunchLotteryBitmapObj.data) || []);\n  } catch (e) {\n    console.log('Could not find fair launch lottery.');\n    console.log(e);\n  }\n\n  return {\n    id: fairLaunchId,\n    state,\n    program,\n    ticket: {\n      pubkey: fairLaunchTicket,\n      bump,\n      data: fairLaunchData\n    },\n    lottery: {\n      pubkey: fairLaunchLotteryBitmap,\n      data: lotteryData\n    },\n    treasury\n  };\n};\nexport const punchTicket = async (anchorWallet, fairLaunch) => {\n  const fairLaunchTicket = (await getFairLaunchTicket( //@ts-ignore\n  fairLaunch.state.tokenMint, anchorWallet.publicKey))[0];\n  const ticket = fairLaunch.ticket.data;\n  const fairLaunchLotteryBitmap = ( //@ts-ignore\n  await getFairLaunchLotteryBitmap(fairLaunch.state.tokenMint))[0];\n  const buyerTokenAccount = (await getAtaForMint( //@ts-ignore\n  fairLaunch.state.tokenMint, anchorWallet.publicKey))[0];\n\n  if (ticket !== null && ticket !== void 0 && ticket.amount.gt(fairLaunch.state.currentMedian)) {\n    console.log('Adjusting down...', ticket === null || ticket === void 0 ? void 0 : ticket.amount.toNumber(), fairLaunch.state.currentMedian.toNumber());\n    const {\n      remainingAccounts,\n      instructions,\n      signers\n    } = await getSetupForTicketing(fairLaunch.program, fairLaunch.state.currentMedian.toNumber(), anchorWallet, fairLaunch, fairLaunchTicket);\n    await fairLaunch.program.rpc.adjustTicket(fairLaunch.state.currentMedian, {\n      accounts: {\n        fairLaunchTicket,\n        fairLaunch: fairLaunch.id,\n        fairLaunchLotteryBitmap,\n        //@ts-ignore\n        treasury: fairLaunch.state.treasury,\n        systemProgram: anchor.web3.SystemProgram.programId,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY\n      },\n      __private: {\n        logAccounts: true\n      },\n      instructions: instructions.length > 0 ? instructions : undefined,\n      remainingAccounts: [{\n        pubkey: anchorWallet.publicKey,\n        isSigner: true,\n        isWritable: true\n      }, ...remainingAccounts],\n      signers\n    });\n  }\n\n  const accountExists = await fairLaunch.program.provider.connection.getAccountInfo(buyerTokenAccount);\n  const instructions = !accountExists ? [createAssociatedTokenAccountInstruction(buyerTokenAccount, anchorWallet.publicKey, anchorWallet.publicKey, //@ts-ignore\n  fairLaunch.state.tokenMint)] : [];\n  await fairLaunch.program.rpc.punchTicket({\n    accounts: {\n      fairLaunchTicket,\n      fairLaunch: fairLaunch.id,\n      fairLaunchLotteryBitmap,\n      payer: anchorWallet.publicKey,\n      buyerTokenAccount,\n      //@ts-ignore\n      tokenMint: fairLaunch.state.tokenMint,\n      tokenProgram: TOKEN_PROGRAM_ID\n    },\n    instructions: instructions.length > 0 ? instructions : undefined\n  });\n};\nexport const getFairLaunchTicket = async (tokenMint, buyer) => {\n  return await anchor.web3.PublicKey.findProgramAddress([Buffer.from('fair_launch'), tokenMint.toBuffer(), buyer.toBuffer()], FAIR_LAUNCH_PROGRAM);\n};\nexport const getFairLaunchLotteryBitmap = async tokenMint => {\n  return await anchor.web3.PublicKey.findProgramAddress([Buffer.from('fair_launch'), tokenMint.toBuffer(), Buffer.from('lottery')], FAIR_LAUNCH_PROGRAM);\n};\n\nconst getSetupForTicketing = async (anchorProgram, amount, anchorWallet, fairLaunch, ticketKey) => {\n  if (!fairLaunch) {\n    return {\n      remainingAccounts: [],\n      instructions: [],\n      signers: [],\n      amountLamports: 0\n    };\n  }\n\n  const ticket = fairLaunch.ticket;\n  const remainingAccounts = [];\n  const instructions = [];\n  const signers = [];\n  let amountLamports = 0; //@ts-ignore\n\n  if (!fairLaunch.state.treasuryMint) {\n    if (!ticket && amount === 0) {\n      amountLamports = fairLaunch.state.data.priceRangeStart.toNumber();\n    } else {\n      amountLamports = Math.ceil(amount * LAMPORTS_PER_SOL);\n    }\n  } else {\n    const transferAuthority = anchor.web3.Keypair.generate();\n    signers.push(transferAuthority); // NOTE this token impl will not work till you get decimal mantissa and multiply...\n    /// ex from cli wont work since you dont have a Signer, but an anchor.Wallet\n\n    /*\n    const token = new Token(\n        anchorProgram.provider.connection,\n        //@ts-ignore\n        fairLaunchObj.treasuryMint,\n        TOKEN_PROGRAM_ID,\n        walletKeyPair,\n      );\n      const mintInfo = await token.getMintInfo();\n      amountNumber = Math.ceil(amountNumber * 10 ** mintInfo.decimals);\n    */\n\n    instructions.push(Token.createApproveInstruction(TOKEN_PROGRAM_ID, //@ts-ignore\n    fairLaunch.state.treasuryMint, transferAuthority.publicKey, anchorWallet.publicKey, [], //@ts-ignore\n    // TODO: get mint decimals\n    amountNumber + fairLaunch.state.data.fees.toNumber()));\n    remainingAccounts.push({\n      //@ts-ignore\n      pubkey: fairLaunch.state.treasuryMint,\n      isWritable: true,\n      isSigner: false\n    });\n    remainingAccounts.push({\n      pubkey: (await getAtaForMint( //@ts-ignore\n      fairLaunch.state.treasuryMint, anchorWallet.publicKey))[0],\n      isWritable: true,\n      isSigner: false\n    });\n    remainingAccounts.push({\n      pubkey: transferAuthority.publicKey,\n      isWritable: false,\n      isSigner: true\n    });\n    remainingAccounts.push({\n      pubkey: TOKEN_PROGRAM_ID,\n      isWritable: false,\n      isSigner: false\n    });\n  }\n\n  if (ticket.data) {\n    var _ticket$data;\n\n    const [fairLaunchTicketSeqLookup, seqBump] = await getFairLaunchTicketSeqLookup(fairLaunch.state.tokenMint, (_ticket$data = ticket.data) === null || _ticket$data === void 0 ? void 0 : _ticket$data.seq);\n    const seq = await anchorProgram.provider.connection.getAccountInfo(fairLaunchTicketSeqLookup);\n\n    if (!seq) {\n      instructions.push(await anchorProgram.instruction.createTicketSeq(seqBump, {\n        accounts: {\n          fairLaunchTicketSeqLookup,\n          fairLaunch: fairLaunch.id,\n          fairLaunchTicket: ticketKey,\n          payer: anchorWallet.publicKey,\n          systemProgram: anchor.web3.SystemProgram.programId,\n          rent: anchor.web3.SYSVAR_RENT_PUBKEY\n        },\n        signers: []\n      }));\n    }\n  }\n\n  return {\n    remainingAccounts,\n    instructions,\n    signers,\n    amountLamports\n  };\n};\n\nexport const receiveRefund = async (anchorWallet, fairLaunch) => {\n  if (!fairLaunch) {\n    return;\n  }\n\n  const buyerTokenAccount = (await getAtaForMint(fairLaunch.state.tokenMint, anchorWallet.publicKey))[0];\n  const transferAuthority = anchor.web3.Keypair.generate();\n  const signers = [transferAuthority];\n  const instructions = [Token.createApproveInstruction(TOKEN_PROGRAM_ID, buyerTokenAccount, transferAuthority.publicKey, anchorWallet.publicKey, [], 1)];\n  const remainingAccounts = [];\n\n  if (fairLaunch.state.treasuryMint) {\n    remainingAccounts.push({\n      pubkey: fairLaunch.state.treasuryMint,\n      isWritable: true,\n      isSigner: false\n    });\n    remainingAccounts.push({\n      pubkey: (await getAtaForMint(fairLaunch.state.treasuryMint, anchorWallet.publicKey))[0],\n      isWritable: true,\n      isSigner: false\n    });\n  }\n\n  console.log('tfr', fairLaunch.state.treasury.toBase58(), anchorWallet.publicKey.toBase58(), buyerTokenAccount.toBase58());\n  await fairLaunch.program.rpc.receiveRefund({\n    accounts: {\n      fairLaunch: fairLaunch.id,\n      treasury: fairLaunch.state.treasury,\n      buyer: anchorWallet.publicKey,\n      buyerTokenAccount,\n      transferAuthority: transferAuthority.publicKey,\n      tokenMint: fairLaunch.state.tokenMint,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY\n    },\n    __private: {\n      logAccounts: true\n    },\n    remainingAccounts,\n    instructions,\n    signers\n  });\n};\nexport const purchaseTicket = async (amount, anchorWallet, fairLaunch) => {\n  if (!fairLaunch) {\n    return;\n  }\n\n  const ticket = fairLaunch.ticket.data;\n  const [fairLaunchTicket, bump] = await getFairLaunchTicket( //@ts-ignore\n  fairLaunch.state.tokenMint, anchorWallet.publicKey);\n  const {\n    remainingAccounts,\n    instructions,\n    signers,\n    amountLamports\n  } = await getSetupForTicketing(fairLaunch.program, amount, anchorWallet, fairLaunch, fairLaunchTicket);\n\n  if (ticket) {\n    const fairLaunchLotteryBitmap = //@ts-ignore\n    (await getFairLaunchLotteryBitmap(fairLaunch.state.tokenMint))[0];\n    console.log('Anchor wallet', anchorWallet.publicKey.toBase58(), amountLamports);\n    await fairLaunch.program.rpc.adjustTicket(new anchor.BN(amountLamports), {\n      accounts: {\n        fairLaunchTicket,\n        fairLaunch: fairLaunch.id,\n        fairLaunchLotteryBitmap,\n        //@ts-ignore\n        treasury: fairLaunch.state.treasury,\n        systemProgram: anchor.web3.SystemProgram.programId,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY\n      },\n      __private: {\n        logAccounts: true\n      },\n      remainingAccounts: [{\n        pubkey: anchorWallet.publicKey,\n        isSigner: true,\n        isWritable: true\n      }, ...remainingAccounts],\n      signers,\n      instructions: instructions.length > 0 ? instructions : undefined\n    });\n    return;\n  }\n\n  try {\n    console.log('Amount', amountLamports);\n    await fairLaunch.program.rpc.purchaseTicket(bump, new anchor.BN(amountLamports), {\n      accounts: {\n        fairLaunchTicket,\n        fairLaunch: fairLaunch.id,\n        //@ts-ignore\n        treasury: fairLaunch.state.treasury,\n        buyer: anchorWallet.publicKey,\n        payer: anchorWallet.publicKey,\n        systemProgram: anchor.web3.SystemProgram.programId,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY\n      },\n      //__private: { logAccounts: true },\n      remainingAccounts,\n      signers,\n      instructions: instructions.length > 0 ? instructions : undefined\n    });\n  } catch (e) {\n    console.log(e);\n    throw e;\n  }\n};\nexport const withdrawFunds = async (anchorWallet, fairLaunch) => {\n  if (!fairLaunch) {\n    return;\n  } // TODO: create sequence ticket\n\n\n  const remainingAccounts = []; //@ts-ignore\n\n  if (fairLaunch.state.treasuryMint) {\n    remainingAccounts.push({\n      //@ts-ignore\n      pubkey: fairLaunch.state.treasuryMint,\n      isWritable: true,\n      isSigner: false\n    });\n    remainingAccounts.push({\n      pubkey: (await getAtaForMint( //@ts-ignore\n      fairLaunch.state.treasuryMint, anchorWallet.publicKey))[0],\n      isWritable: true,\n      isSigner: false\n    });\n    remainingAccounts.push({\n      pubkey: TOKEN_PROGRAM_ID,\n      isWritable: false,\n      isSigner: false\n    });\n  }\n\n  await fairLaunch.program.rpc.withdrawFunds({\n    accounts: {\n      fairLaunch: fairLaunch.id,\n      // @ts-ignore\n      treasury: fairLaunch.state.treasury,\n      authority: anchorWallet.publicKey,\n      // @ts-ignore\n      tokenMint: fairLaunch.state.tokenMint,\n      systemProgram: anchor.web3.SystemProgram.programId\n    },\n    remainingAccounts\n  });\n};","map":{"version":3,"sources":["D:/Solana/metaplex/metaplex-master/js/packages/fair-launch/src/fair-launch.ts"],"names":["anchor","TOKEN_PROGRAM_ID","Token","LAMPORTS_PER_SOL","createAssociatedTokenAccountInstruction","getAtaForMint","getFairLaunchTicketSeqLookup","FAIR_LAUNCH_PROGRAM","web3","PublicKey","LotteryState","getLotteryState","phaseThree","lottery","lotteryDuration","phaseTwoEnd","length","add","lt","BN","Date","now","PastDue","Finished","Brewing","getFairLaunchState","anchorWallet","fairLaunchId","connection","provider","Provider","preflightCommitment","idl","Program","fetchIdl","program","state","account","fairLaunch","fetch","fairLaunchTicket","bump","getFairLaunchTicket","tokenMint","publicKey","fairLaunchData","console","log","treasury","getBalance","lotteryData","Uint8Array","fairLaunchLotteryBitmap","getFairLaunchLotteryBitmap","fairLaunchLotteryBitmapObj","getAccountInfo","data","e","id","ticket","pubkey","punchTicket","buyerTokenAccount","amount","gt","currentMedian","toNumber","remainingAccounts","instructions","signers","getSetupForTicketing","rpc","adjustTicket","accounts","systemProgram","SystemProgram","programId","clock","SYSVAR_CLOCK_PUBKEY","__private","logAccounts","undefined","isSigner","isWritable","accountExists","payer","tokenProgram","buyer","findProgramAddress","Buffer","from","toBuffer","anchorProgram","ticketKey","amountLamports","treasuryMint","priceRangeStart","Math","ceil","transferAuthority","Keypair","generate","push","createApproveInstruction","amountNumber","fees","fairLaunchTicketSeqLookup","seqBump","seq","instruction","createTicketSeq","rent","SYSVAR_RENT_PUBKEY","receiveRefund","toBase58","purchaseTicket","withdrawFunds","authority"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,uBAAxB;AAEA,SAASC,gBAAT,EAA2BC,KAA3B,QAAwC,mBAAxC;AACA,SAASC,gBAAT,QAAyD,iBAAzD;AACA,SACEC,uCADF,EAEEC,aAFF,EAGEC,4BAHF,QAIO,SAJP;AAMA,OAAO,MAAMC,mBAAmB,GAAG,IAAIP,MAAM,CAACQ,IAAP,CAAYC,SAAhB,CACjC,6CADiC,CAA5B;AA0EP,WAAYC,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,KAAAA,Y;;AAMZ,OAAO,MAAMC,eAAe,GAAG,CAC7BC,UAD6B,EAE7BC,OAF6B,EAG7BC,eAH6B,EAI7BC,WAJ6B,KAKZ;AACjB,MACE,CAACH,UAAD,KACC,CAACC,OAAD,IAAYA,OAAO,CAACG,MAAR,KAAmB,CADhC,KAEAD,WAAW,CAACE,GAAZ,CAAgBH,eAAhB,EAAiCI,EAAjC,CAAoC,IAAIlB,MAAM,CAACmB,EAAX,CAAcC,IAAI,CAACC,GAAL,KAAa,IAA3B,CAApC,CAHF,EAIE;AACA,WAAOX,YAAY,CAACY,OAApB;AACD,GAND,MAMO,IAAIV,UAAJ,EAAgB;AACrB,WAAOF,YAAY,CAACa,QAApB;AACD,GAFM,MAEA;AACL,WAAOb,YAAY,CAACc,OAApB;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMC,kBAAkB,GAAG,OAChCC,YADgC,EAEhCC,YAFgC,EAGhCC,UAHgC,KAID;AAC/B,QAAMC,QAAQ,GAAG,IAAI7B,MAAM,CAAC8B,QAAX,CAAoBF,UAApB,EAAgCF,YAAhC,EAA8C;AAC7DK,IAAAA,mBAAmB,EAAE;AADwC,GAA9C,CAAjB;AAIA,QAAMC,GAAG,GAAG,MAAMhC,MAAM,CAACiC,OAAP,CAAeC,QAAf,CAAwB3B,mBAAxB,EAA6CsB,QAA7C,CAAlB;AAEA,QAAMM,OAAO,GAAG,IAAInC,MAAM,CAACiC,OAAX,CAAmBD,GAAnB,EAAwBzB,mBAAxB,EAA6CsB,QAA7C,CAAhB;AACA,QAAMO,KAAU,GAAG,MAAMD,OAAO,CAACE,OAAR,CAAgBC,UAAhB,CAA2BC,KAA3B,CAAiCZ,YAAjC,CAAzB;AAEA,QAAM,CAACa,gBAAD,EAAmBC,IAAnB,IAA2B,MAAMC,mBAAmB,EACxD;AACAN,EAAAA,KAAK,CAACO,SAFkD,EAGxDjB,YAAY,CAACkB,SAH2C,CAA1D;AAMA,MAAIC,cAAJ;;AAEA,MAAI;AACFA,IAAAA,cAAc,GAAG,MAAMV,OAAO,CAACE,OAAR,CAAgBG,gBAAhB,CAAiCD,KAAjC,CACrBC,gBADqB,CAAvB;AAGD,GAJD,CAIE,MAAM;AACNM,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AAED,QAAMC,QAAQ,GAAG,MAAMb,OAAO,CAACN,QAAR,CAAiBD,UAAjB,CAA4BqB,UAA5B,CAAuCb,KAAK,CAACY,QAA7C,CAAvB;AAEA,MAAIE,WAAuB,GAAG,IAAIC,UAAJ,CAAe,EAAf,CAA9B;AACA,MAAIC,uBAAuB,GAAG,CAC5B,MAAMC,0BAA0B,EAC9B;AACAjB,EAAAA,KAAK,CAACO,SAFwB,CADJ,EAK5B,CAL4B,CAA9B;;AAOA,MAAI;AACF,UAAMW,0BAA0B,GAC9B,MAAMnB,OAAO,CAACN,QAAR,CAAiBD,UAAjB,CAA4B2B,cAA5B,CAA2CH,uBAA3C,CADR;AAGAF,IAAAA,WAAW,GAAG,IAAIC,UAAJ,CAAe,CAAAG,0BAA0B,SAA1B,IAAAA,0BAA0B,WAA1B,YAAAA,0BAA0B,CAAEE,IAA5B,KAAoC,EAAnD,CAAd;AACD,GALD,CAKE,OAAOC,CAAP,EAAU;AACVX,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ;AACD;;AAED,SAAO;AACLC,IAAAA,EAAE,EAAE/B,YADC;AAELS,IAAAA,KAFK;AAGLD,IAAAA,OAHK;AAILwB,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAEpB,gBADF;AAENC,MAAAA,IAFM;AAGNe,MAAAA,IAAI,EAAEX;AAHA,KAJH;AASLhC,IAAAA,OAAO,EAAE;AACP+C,MAAAA,MAAM,EAAER,uBADD;AAEPI,MAAAA,IAAI,EAAEN;AAFC,KATJ;AAaLF,IAAAA;AAbK,GAAP;AAeD,CAjEM;AAmEP,OAAO,MAAMa,WAAW,GAAG,OACzBnC,YADyB,EAEzBY,UAFyB,KAGtB;AACH,QAAME,gBAAgB,GAAG,CACvB,MAAME,mBAAmB,EACvB;AACAJ,EAAAA,UAAU,CAACF,KAAX,CAAiBO,SAFM,EAGvBjB,YAAY,CAACkB,SAHU,CADF,EAMvB,CANuB,CAAzB;AAQA,QAAMe,MAAM,GAAGrB,UAAU,CAACqB,MAAX,CAAkBH,IAAjC;AAEA,QAAMJ,uBAAuB,GAAG,EAAE;AAChC,QAAMC,0BAA0B,CAACf,UAAU,CAACF,KAAX,CAAiBO,SAAlB,CADF,EAE9B,CAF8B,CAAhC;AAIA,QAAMmB,iBAAiB,GAAG,CACxB,MAAMzD,aAAa,EACjB;AACAiC,EAAAA,UAAU,CAACF,KAAX,CAAiBO,SAFA,EAGjBjB,YAAY,CAACkB,SAHI,CADK,EAMxB,CANwB,CAA1B;;AAQA,MAAIe,MAAJ,aAAIA,MAAJ,eAAIA,MAAM,CAAEI,MAAR,CAAeC,EAAf,CAAkB1B,UAAU,CAACF,KAAX,CAAiB6B,aAAnC,CAAJ,EAAuD;AACrDnB,IAAAA,OAAO,CAACC,GAAR,CACE,mBADF,EAEEY,MAFF,aAEEA,MAFF,uBAEEA,MAAM,CAAEI,MAAR,CAAeG,QAAf,EAFF,EAGE5B,UAAU,CAACF,KAAX,CAAiB6B,aAAjB,CAA+BC,QAA/B,EAHF;AAKA,UAAM;AAAEC,MAAAA,iBAAF;AAAqBC,MAAAA,YAArB;AAAmCC,MAAAA;AAAnC,QACJ,MAAMC,oBAAoB,CACxBhC,UAAU,CAACH,OADa,EAExBG,UAAU,CAACF,KAAX,CAAiB6B,aAAjB,CAA+BC,QAA/B,EAFwB,EAGxBxC,YAHwB,EAIxBY,UAJwB,EAKxBE,gBALwB,CAD5B;AAQA,UAAMF,UAAU,CAACH,OAAX,CAAmBoC,GAAnB,CAAuBC,YAAvB,CAAoClC,UAAU,CAACF,KAAX,CAAiB6B,aAArD,EAAoE;AACxEQ,MAAAA,QAAQ,EAAE;AACRjC,QAAAA,gBADQ;AAERF,QAAAA,UAAU,EAAEA,UAAU,CAACoB,EAFf;AAGRN,QAAAA,uBAHQ;AAIR;AACAJ,QAAAA,QAAQ,EAAEV,UAAU,CAACF,KAAX,CAAiBY,QALnB;AAMR0B,QAAAA,aAAa,EAAE1E,MAAM,CAACQ,IAAP,CAAYmE,aAAZ,CAA0BC,SANjC;AAORC,QAAAA,KAAK,EAAE7E,MAAM,CAACQ,IAAP,CAAYsE;AAPX,OAD8D;AAUxEC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAV6D;AAWxEZ,MAAAA,YAAY,EAAEA,YAAY,CAACpD,MAAb,GAAsB,CAAtB,GAA0BoD,YAA1B,GAAyCa,SAXiB;AAYxEd,MAAAA,iBAAiB,EAAE,CACjB;AACEP,QAAAA,MAAM,EAAElC,YAAY,CAACkB,SADvB;AAEEsC,QAAAA,QAAQ,EAAE,IAFZ;AAGEC,QAAAA,UAAU,EAAE;AAHd,OADiB,EAMjB,GAAGhB,iBANc,CAZqD;AAoBxEE,MAAAA;AApBwE,KAApE,CAAN;AAsBD;;AAED,QAAMe,aAAa,GACjB,MAAM9C,UAAU,CAACH,OAAX,CAAmBN,QAAnB,CAA4BD,UAA5B,CAAuC2B,cAAvC,CACJO,iBADI,CADR;AAKA,QAAMM,YAAY,GAAG,CAACgB,aAAD,GACjB,CACEhF,uCAAuC,CACrC0D,iBADqC,EAErCpC,YAAY,CAACkB,SAFwB,EAGrClB,YAAY,CAACkB,SAHwB,EAIrC;AACAN,EAAAA,UAAU,CAACF,KAAX,CAAiBO,SALoB,CADzC,CADiB,GAUjB,EAVJ;AAYA,QAAML,UAAU,CAACH,OAAX,CAAmBoC,GAAnB,CAAuBV,WAAvB,CAAmC;AACvCY,IAAAA,QAAQ,EAAE;AACRjC,MAAAA,gBADQ;AAERF,MAAAA,UAAU,EAAEA,UAAU,CAACoB,EAFf;AAGRN,MAAAA,uBAHQ;AAIRiC,MAAAA,KAAK,EAAE3D,YAAY,CAACkB,SAJZ;AAKRkB,MAAAA,iBALQ;AAMR;AACAnB,MAAAA,SAAS,EAAEL,UAAU,CAACF,KAAX,CAAiBO,SAPpB;AAQR2C,MAAAA,YAAY,EAAErF;AARN,KAD6B;AAWvCmE,IAAAA,YAAY,EAAEA,YAAY,CAACpD,MAAb,GAAsB,CAAtB,GAA0BoD,YAA1B,GAAyCa;AAXhB,GAAnC,CAAN;AAaD,CA9FM;AAgGP,OAAO,MAAMvC,mBAAmB,GAAG,OACjCC,SADiC,EAEjC4C,KAFiC,KAGY;AAC7C,SAAO,MAAMvF,MAAM,CAACQ,IAAP,CAAYC,SAAZ,CAAsB+E,kBAAtB,CACX,CAACC,MAAM,CAACC,IAAP,CAAY,aAAZ,CAAD,EAA6B/C,SAAS,CAACgD,QAAV,EAA7B,EAAmDJ,KAAK,CAACI,QAAN,EAAnD,CADW,EAEXpF,mBAFW,CAAb;AAID,CARM;AAUP,OAAO,MAAM8C,0BAA0B,GAAG,MACxCV,SADwC,IAEK;AAC7C,SAAO,MAAM3C,MAAM,CAACQ,IAAP,CAAYC,SAAZ,CAAsB+E,kBAAtB,CACX,CAACC,MAAM,CAACC,IAAP,CAAY,aAAZ,CAAD,EAA6B/C,SAAS,CAACgD,QAAV,EAA7B,EAAmDF,MAAM,CAACC,IAAP,CAAY,SAAZ,CAAnD,CADW,EAEXnF,mBAFW,CAAb;AAID,CAPM;;AASP,MAAM+D,oBAAoB,GAAG,OAC3BsB,aAD2B,EAE3B7B,MAF2B,EAG3BrC,YAH2B,EAI3BY,UAJ2B,EAK3BuD,SAL2B,KAevB;AACJ,MAAI,CAACvD,UAAL,EAAiB;AACf,WAAO;AACL6B,MAAAA,iBAAiB,EAAE,EADd;AAELC,MAAAA,YAAY,EAAE,EAFT;AAGLC,MAAAA,OAAO,EAAE,EAHJ;AAILyB,MAAAA,cAAc,EAAE;AAJX,KAAP;AAMD;;AACD,QAAMnC,MAAM,GAAGrB,UAAU,CAACqB,MAA1B;AAEA,QAAMQ,iBAAiB,GAAG,EAA1B;AACA,QAAMC,YAAY,GAAG,EAArB;AACA,QAAMC,OAAO,GAAG,EAAhB;AAEA,MAAIyB,cAAc,GAAG,CAArB,CAfI,CAgBJ;;AACA,MAAI,CAACxD,UAAU,CAACF,KAAX,CAAiB2D,YAAtB,EAAoC;AAClC,QAAI,CAACpC,MAAD,IAAWI,MAAM,KAAK,CAA1B,EAA6B;AAC3B+B,MAAAA,cAAc,GAAGxD,UAAU,CAACF,KAAX,CAAiBoB,IAAjB,CAAsBwC,eAAtB,CAAsC9B,QAAtC,EAAjB;AACD,KAFD,MAEO;AACL4B,MAAAA,cAAc,GAAGG,IAAI,CAACC,IAAL,CAAUnC,MAAM,GAAG5D,gBAAnB,CAAjB;AACD;AACF,GAND,MAMO;AACL,UAAMgG,iBAAiB,GAAGnG,MAAM,CAACQ,IAAP,CAAY4F,OAAZ,CAAoBC,QAApB,EAA1B;AACAhC,IAAAA,OAAO,CAACiC,IAAR,CAAaH,iBAAb,EAFK,CAGL;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI/B,IAAAA,YAAY,CAACkC,IAAb,CACEpG,KAAK,CAACqG,wBAAN,CACEtG,gBADF,EAEE;AACAqC,IAAAA,UAAU,CAACF,KAAX,CAAiB2D,YAHnB,EAIEI,iBAAiB,CAACvD,SAJpB,EAKElB,YAAY,CAACkB,SALf,EAME,EANF,EAOE;AAEA;AACA4D,IAAAA,YAAY,GAAGlE,UAAU,CAACF,KAAX,CAAiBoB,IAAjB,CAAsBiD,IAAtB,CAA2BvC,QAA3B,EAVjB,CADF;AAeAC,IAAAA,iBAAiB,CAACmC,IAAlB,CAAuB;AACrB;AACA1C,MAAAA,MAAM,EAAEtB,UAAU,CAACF,KAAX,CAAiB2D,YAFJ;AAGrBZ,MAAAA,UAAU,EAAE,IAHS;AAIrBD,MAAAA,QAAQ,EAAE;AAJW,KAAvB;AAMAf,IAAAA,iBAAiB,CAACmC,IAAlB,CAAuB;AACrB1C,MAAAA,MAAM,EAAE,CACN,MAAMvD,aAAa,EACjB;AACAiC,MAAAA,UAAU,CAACF,KAAX,CAAiB2D,YAFA,EAGjBrE,YAAY,CAACkB,SAHI,CADb,EAMN,CANM,CADa;AAQrBuC,MAAAA,UAAU,EAAE,IARS;AASrBD,MAAAA,QAAQ,EAAE;AATW,KAAvB;AAWAf,IAAAA,iBAAiB,CAACmC,IAAlB,CAAuB;AACrB1C,MAAAA,MAAM,EAAEuC,iBAAiB,CAACvD,SADL;AAErBuC,MAAAA,UAAU,EAAE,KAFS;AAGrBD,MAAAA,QAAQ,EAAE;AAHW,KAAvB;AAKAf,IAAAA,iBAAiB,CAACmC,IAAlB,CAAuB;AACrB1C,MAAAA,MAAM,EAAE3D,gBADa;AAErBkF,MAAAA,UAAU,EAAE,KAFS;AAGrBD,MAAAA,QAAQ,EAAE;AAHW,KAAvB;AAKD;;AAED,MAAIvB,MAAM,CAACH,IAAX,EAAiB;AAAA;;AACf,UAAM,CAACkD,yBAAD,EAA4BC,OAA5B,IACJ,MAAMrG,4BAA4B,CAChCgC,UAAU,CAACF,KAAX,CAAiBO,SADe,kBAEhCgB,MAAM,CAACH,IAFyB,iDAEhC,aAAaoD,GAFmB,CADpC;AAMA,UAAMA,GAAG,GAAG,MAAMhB,aAAa,CAAC/D,QAAd,CAAuBD,UAAvB,CAAkC2B,cAAlC,CAChBmD,yBADgB,CAAlB;;AAGA,QAAI,CAACE,GAAL,EAAU;AACRxC,MAAAA,YAAY,CAACkC,IAAb,CACE,MAAMV,aAAa,CAACiB,WAAd,CAA0BC,eAA1B,CAA0CH,OAA1C,EAAmD;AACvDlC,QAAAA,QAAQ,EAAE;AACRiC,UAAAA,yBADQ;AAERpE,UAAAA,UAAU,EAAEA,UAAU,CAACoB,EAFf;AAGRlB,UAAAA,gBAAgB,EAAEqD,SAHV;AAIRR,UAAAA,KAAK,EAAE3D,YAAY,CAACkB,SAJZ;AAKR8B,UAAAA,aAAa,EAAE1E,MAAM,CAACQ,IAAP,CAAYmE,aAAZ,CAA0BC,SALjC;AAMRmC,UAAAA,IAAI,EAAE/G,MAAM,CAACQ,IAAP,CAAYwG;AANV,SAD6C;AASvD3C,QAAAA,OAAO,EAAE;AAT8C,OAAnD,CADR;AAaD;AACF;;AAED,SAAO;AACLF,IAAAA,iBADK;AAELC,IAAAA,YAFK;AAGLC,IAAAA,OAHK;AAILyB,IAAAA;AAJK,GAAP;AAMD,CAnID;;AAqIA,OAAO,MAAMmB,aAAa,GAAG,OAC3BvF,YAD2B,EAE3BY,UAF2B,KAGxB;AACH,MAAI,CAACA,UAAL,EAAiB;AACf;AACD;;AAED,QAAMwB,iBAAiB,GAAG,CACxB,MAAMzD,aAAa,CAACiC,UAAU,CAACF,KAAX,CAAiBO,SAAlB,EAA6BjB,YAAY,CAACkB,SAA1C,CADK,EAExB,CAFwB,CAA1B;AAIA,QAAMuD,iBAAiB,GAAGnG,MAAM,CAACQ,IAAP,CAAY4F,OAAZ,CAAoBC,QAApB,EAA1B;AAEA,QAAMhC,OAAO,GAAG,CAAC8B,iBAAD,CAAhB;AACA,QAAM/B,YAAY,GAAG,CACnBlE,KAAK,CAACqG,wBAAN,CACEtG,gBADF,EAEE6D,iBAFF,EAGEqC,iBAAiB,CAACvD,SAHpB,EAIElB,YAAY,CAACkB,SAJf,EAKE,EALF,EAME,CANF,CADmB,CAArB;AAWA,QAAMuB,iBAAiB,GAAG,EAA1B;;AAEA,MAAI7B,UAAU,CAACF,KAAX,CAAiB2D,YAArB,EAAmC;AACjC5B,IAAAA,iBAAiB,CAACmC,IAAlB,CAAuB;AACrB1C,MAAAA,MAAM,EAAEtB,UAAU,CAACF,KAAX,CAAiB2D,YADJ;AAErBZ,MAAAA,UAAU,EAAE,IAFS;AAGrBD,MAAAA,QAAQ,EAAE;AAHW,KAAvB;AAKAf,IAAAA,iBAAiB,CAACmC,IAAlB,CAAuB;AACrB1C,MAAAA,MAAM,EAAE,CACN,MAAMvD,aAAa,CACjBiC,UAAU,CAACF,KAAX,CAAiB2D,YADA,EAEjBrE,YAAY,CAACkB,SAFI,CADb,EAKN,CALM,CADa;AAOrBuC,MAAAA,UAAU,EAAE,IAPS;AAQrBD,MAAAA,QAAQ,EAAE;AARW,KAAvB;AAUD;;AAEDpC,EAAAA,OAAO,CAACC,GAAR,CACE,KADF,EAEET,UAAU,CAACF,KAAX,CAAiBY,QAAjB,CAA0BkE,QAA1B,EAFF,EAGExF,YAAY,CAACkB,SAAb,CAAuBsE,QAAvB,EAHF,EAIEpD,iBAAiB,CAACoD,QAAlB,EAJF;AAMA,QAAM5E,UAAU,CAACH,OAAX,CAAmBoC,GAAnB,CAAuB0C,aAAvB,CAAqC;AACzCxC,IAAAA,QAAQ,EAAE;AACRnC,MAAAA,UAAU,EAAEA,UAAU,CAACoB,EADf;AAERV,MAAAA,QAAQ,EAAEV,UAAU,CAACF,KAAX,CAAiBY,QAFnB;AAGRuC,MAAAA,KAAK,EAAE7D,YAAY,CAACkB,SAHZ;AAIRkB,MAAAA,iBAJQ;AAKRqC,MAAAA,iBAAiB,EAAEA,iBAAiB,CAACvD,SAL7B;AAMRD,MAAAA,SAAS,EAAEL,UAAU,CAACF,KAAX,CAAiBO,SANpB;AAOR2C,MAAAA,YAAY,EAAErF,gBAPN;AAQRyE,MAAAA,aAAa,EAAE1E,MAAM,CAACQ,IAAP,CAAYmE,aAAZ,CAA0BC,SARjC;AASRC,MAAAA,KAAK,EAAE7E,MAAM,CAACQ,IAAP,CAAYsE;AATX,KAD+B;AAazCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAb8B;AAczCb,IAAAA,iBAdyC;AAezCC,IAAAA,YAfyC;AAgBzCC,IAAAA;AAhByC,GAArC,CAAN;AAkBD,CAtEM;AAuEP,OAAO,MAAM8C,cAAc,GAAG,OAC5BpD,MAD4B,EAE5BrC,YAF4B,EAG5BY,UAH4B,KAIzB;AACH,MAAI,CAACA,UAAL,EAAiB;AACf;AACD;;AAED,QAAMqB,MAAM,GAAGrB,UAAU,CAACqB,MAAX,CAAkBH,IAAjC;AAEA,QAAM,CAAChB,gBAAD,EAAmBC,IAAnB,IAA2B,MAAMC,mBAAmB,EACxD;AACAJ,EAAAA,UAAU,CAACF,KAAX,CAAiBO,SAFuC,EAGxDjB,YAAY,CAACkB,SAH2C,CAA1D;AAMA,QAAM;AAAEuB,IAAAA,iBAAF;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA,OAAnC;AAA4CyB,IAAAA;AAA5C,MACJ,MAAMxB,oBAAoB,CACxBhC,UAAU,CAACH,OADa,EAExB4B,MAFwB,EAGxBrC,YAHwB,EAIxBY,UAJwB,EAKxBE,gBALwB,CAD5B;;AASA,MAAImB,MAAJ,EAAY;AACV,UAAMP,uBAAuB,GAAG;AAChC,KAAC,MAAMC,0BAA0B,CAACf,UAAU,CAACF,KAAX,CAAiBO,SAAlB,CAAjC,EAA+D,CAA/D,CADA;AAEAG,IAAAA,OAAO,CAACC,GAAR,CACE,eADF,EAEErB,YAAY,CAACkB,SAAb,CAAuBsE,QAAvB,EAFF,EAGEpB,cAHF;AAKA,UAAMxD,UAAU,CAACH,OAAX,CAAmBoC,GAAnB,CAAuBC,YAAvB,CAAoC,IAAIxE,MAAM,CAACmB,EAAX,CAAc2E,cAAd,CAApC,EAAmE;AACvErB,MAAAA,QAAQ,EAAE;AACRjC,QAAAA,gBADQ;AAERF,QAAAA,UAAU,EAAEA,UAAU,CAACoB,EAFf;AAGRN,QAAAA,uBAHQ;AAIR;AACAJ,QAAAA,QAAQ,EAAEV,UAAU,CAACF,KAAX,CAAiBY,QALnB;AAMR0B,QAAAA,aAAa,EAAE1E,MAAM,CAACQ,IAAP,CAAYmE,aAAZ,CAA0BC,SANjC;AAORC,QAAAA,KAAK,EAAE7E,MAAM,CAACQ,IAAP,CAAYsE;AAPX,OAD6D;AAUvEC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAV4D;AAWvEb,MAAAA,iBAAiB,EAAE,CACjB;AACEP,QAAAA,MAAM,EAAElC,YAAY,CAACkB,SADvB;AAEEsC,QAAAA,QAAQ,EAAE,IAFZ;AAGEC,QAAAA,UAAU,EAAE;AAHd,OADiB,EAMjB,GAAGhB,iBANc,CAXoD;AAmBvEE,MAAAA,OAnBuE;AAoBvED,MAAAA,YAAY,EAAEA,YAAY,CAACpD,MAAb,GAAsB,CAAtB,GAA0BoD,YAA1B,GAAyCa;AApBgB,KAAnE,CAAN;AAuBA;AACD;;AACD,MAAI;AACFnC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB+C,cAAtB;AACA,UAAMxD,UAAU,CAACH,OAAX,CAAmBoC,GAAnB,CAAuB4C,cAAvB,CACJ1E,IADI,EAEJ,IAAIzC,MAAM,CAACmB,EAAX,CAAc2E,cAAd,CAFI,EAGJ;AACErB,MAAAA,QAAQ,EAAE;AACRjC,QAAAA,gBADQ;AAERF,QAAAA,UAAU,EAAEA,UAAU,CAACoB,EAFf;AAGR;AACAV,QAAAA,QAAQ,EAAEV,UAAU,CAACF,KAAX,CAAiBY,QAJnB;AAKRuC,QAAAA,KAAK,EAAE7D,YAAY,CAACkB,SALZ;AAMRyC,QAAAA,KAAK,EAAE3D,YAAY,CAACkB,SANZ;AAOR8B,QAAAA,aAAa,EAAE1E,MAAM,CAACQ,IAAP,CAAYmE,aAAZ,CAA0BC,SAPjC;AAQRmC,QAAAA,IAAI,EAAE/G,MAAM,CAACQ,IAAP,CAAYwG,kBARV;AASRnC,QAAAA,KAAK,EAAE7E,MAAM,CAACQ,IAAP,CAAYsE;AATX,OADZ;AAYE;AACAX,MAAAA,iBAbF;AAcEE,MAAAA,OAdF;AAeED,MAAAA,YAAY,EAAEA,YAAY,CAACpD,MAAb,GAAsB,CAAtB,GAA0BoD,YAA1B,GAAyCa;AAfzD,KAHI,CAAN;AAqBD,GAvBD,CAuBE,OAAOxB,CAAP,EAAU;AACVX,IAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ;AACA,UAAMA,CAAN;AACD;AACF,CAtFM;AAwFP,OAAO,MAAM2D,aAAa,GAAG,OAC3B1F,YAD2B,EAE3BY,UAF2B,KAGxB;AACH,MAAI,CAACA,UAAL,EAAiB;AACf;AACD,GAHE,CAKH;;;AAEA,QAAM6B,iBAAiB,GAAG,EAA1B,CAPG,CASH;;AACA,MAAI7B,UAAU,CAACF,KAAX,CAAiB2D,YAArB,EAAmC;AACjC5B,IAAAA,iBAAiB,CAACmC,IAAlB,CAAuB;AACrB;AACA1C,MAAAA,MAAM,EAAEtB,UAAU,CAACF,KAAX,CAAiB2D,YAFJ;AAGrBZ,MAAAA,UAAU,EAAE,IAHS;AAIrBD,MAAAA,QAAQ,EAAE;AAJW,KAAvB;AAMAf,IAAAA,iBAAiB,CAACmC,IAAlB,CAAuB;AACrB1C,MAAAA,MAAM,EAAE,CACN,MAAMvD,aAAa,EACjB;AACAiC,MAAAA,UAAU,CAACF,KAAX,CAAiB2D,YAFA,EAGjBrE,YAAY,CAACkB,SAHI,CADb,EAMN,CANM,CADa;AAQrBuC,MAAAA,UAAU,EAAE,IARS;AASrBD,MAAAA,QAAQ,EAAE;AATW,KAAvB;AAWAf,IAAAA,iBAAiB,CAACmC,IAAlB,CAAuB;AACrB1C,MAAAA,MAAM,EAAE3D,gBADa;AAErBkF,MAAAA,UAAU,EAAE,KAFS;AAGrBD,MAAAA,QAAQ,EAAE;AAHW,KAAvB;AAKD;;AAED,QAAM5C,UAAU,CAACH,OAAX,CAAmBoC,GAAnB,CAAuB6C,aAAvB,CAAqC;AACzC3C,IAAAA,QAAQ,EAAE;AACRnC,MAAAA,UAAU,EAAEA,UAAU,CAACoB,EADf;AAER;AACAV,MAAAA,QAAQ,EAAEV,UAAU,CAACF,KAAX,CAAiBY,QAHnB;AAIRqE,MAAAA,SAAS,EAAE3F,YAAY,CAACkB,SAJhB;AAKR;AACAD,MAAAA,SAAS,EAAEL,UAAU,CAACF,KAAX,CAAiBO,SANpB;AAOR+B,MAAAA,aAAa,EAAE1E,MAAM,CAACQ,IAAP,CAAYmE,aAAZ,CAA0BC;AAPjC,KAD+B;AAUzCT,IAAAA;AAVyC,GAArC,CAAN;AAYD,CAlDM","sourcesContent":["import * as anchor from '@project-serum/anchor';\n\nimport { TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\nimport { LAMPORTS_PER_SOL, TransactionInstruction } from '@solana/web3.js';\nimport {\n  createAssociatedTokenAccountInstruction,\n  getAtaForMint,\n  getFairLaunchTicketSeqLookup,\n} from './utils';\n\nexport const FAIR_LAUNCH_PROGRAM = new anchor.web3.PublicKey(\n  'faircnAB9k59Y4TXmLabBULeuTLgV7TkGMGNkjnA15j',\n);\n\nexport interface FairLaunchAccount {\n  id: anchor.web3.PublicKey;\n  program: anchor.Program;\n  state: FairLaunchState;\n\n  ticket: {\n    pubkey: anchor.web3.PublicKey;\n    bump: number;\n    data?: FairLaunchTicket;\n  };\n  lottery: {\n    pubkey: anchor.web3.PublicKey;\n    data?: Uint8Array;\n  };\n  treasury: number;\n}\n\nexport interface FairLaunchTicket {\n  fairLaunch: anchor.web3.PublicKey;\n  buyer: anchor.web3.PublicKey;\n  amount: anchor.BN;\n  state: {\n    punched?: {};\n    unpunched?: {};\n    withdrawn?: {};\n    no_sequence_struct: {};\n  };\n  bump: number;\n  seq: anchor.BN;\n}\n\nexport interface AntiRugSetting {\n  reserveBp: number;\n  tokenRequirement: anchor.BN;\n  selfDestructDate: anchor.BN;\n}\nexport interface FairLaunchState {\n  authority: anchor.web3.PublicKey;\n  bump: number;\n\n  currentMedian: anchor.BN;\n  currentEligibleHolders: anchor.BN;\n  data: {\n    antiRugSetting?: AntiRugSetting;\n    fee: anchor.BN;\n    numberOfTokens: anchor.BN;\n    phaseOneEnd: anchor.BN;\n    phaseOneStart: anchor.BN;\n    phaseTwoEnd: anchor.BN;\n    priceRangeEnd: anchor.BN;\n    priceRangeStart: anchor.BN;\n    lotteryDuration: anchor.BN;\n    tickSize: anchor.BN;\n    uuid: string;\n  };\n  numberTicketsDropped: anchor.BN;\n  numberTicketsPunched: anchor.BN;\n  numberTicketsSold: anchor.BN;\n  numberTicketsUnSeqed: anchor.BN;\n  numberTokensBurnedForRefunds: anchor.BN;\n  numberTokensPreminted: anchor.BN;\n  phaseThreeStarted: boolean;\n  tokenMint: anchor.web3.PublicKey;\n  tokenMintBump: number;\n  treasury: anchor.web3.PublicKey;\n  treasuryBump: number;\n  treasuryMint: anchor.web3.PublicKey; // only for SPL tokens\n  treasurySnapshot: null;\n}\n\nexport enum LotteryState {\n  Brewing = 'Brewing',\n  Finished = 'Finished',\n  PastDue = 'Past Due',\n}\n\nexport const getLotteryState = (\n  phaseThree: boolean | undefined,\n  lottery: Uint8Array | null,\n  lotteryDuration: anchor.BN,\n  phaseTwoEnd: anchor.BN,\n): LotteryState => {\n  if (\n    !phaseThree &&\n    (!lottery || lottery.length === 0) &&\n    phaseTwoEnd.add(lotteryDuration).lt(new anchor.BN(Date.now() / 1000))\n  ) {\n    return LotteryState.PastDue;\n  } else if (phaseThree) {\n    return LotteryState.Finished;\n  } else {\n    return LotteryState.Brewing;\n  }\n};\n\nexport const getFairLaunchState = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunchId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<FairLaunchAccount> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: 'recent',\n  });\n\n  const idl = await anchor.Program.fetchIdl(FAIR_LAUNCH_PROGRAM, provider);\n\n  const program = new anchor.Program(idl, FAIR_LAUNCH_PROGRAM, provider);\n  const state: any = await program.account.fairLaunch.fetch(fairLaunchId);\n\n  const [fairLaunchTicket, bump] = await getFairLaunchTicket(\n    //@ts-ignore\n    state.tokenMint,\n    anchorWallet.publicKey,\n  );\n\n  let fairLaunchData: any;\n\n  try {\n    fairLaunchData = await program.account.fairLaunchTicket.fetch(\n      fairLaunchTicket,\n    );\n  } catch {\n    console.log('No ticket');\n  }\n\n  const treasury = await program.provider.connection.getBalance(state.treasury);\n\n  let lotteryData: Uint8Array = new Uint8Array([]);\n  let fairLaunchLotteryBitmap = (\n    await getFairLaunchLotteryBitmap(\n      //@ts-ignore\n      state.tokenMint,\n    )\n  )[0];\n\n  try {\n    const fairLaunchLotteryBitmapObj =\n      await program.provider.connection.getAccountInfo(fairLaunchLotteryBitmap);\n\n    lotteryData = new Uint8Array(fairLaunchLotteryBitmapObj?.data || []);\n  } catch (e) {\n    console.log('Could not find fair launch lottery.');\n    console.log(e);\n  }\n\n  return {\n    id: fairLaunchId,\n    state,\n    program,\n    ticket: {\n      pubkey: fairLaunchTicket,\n      bump,\n      data: fairLaunchData,\n    },\n    lottery: {\n      pubkey: fairLaunchLotteryBitmap,\n      data: lotteryData,\n    },\n    treasury,\n  };\n};\n\nexport const punchTicket = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount,\n) => {\n  const fairLaunchTicket = (\n    await getFairLaunchTicket(\n      //@ts-ignore\n      fairLaunch.state.tokenMint,\n      anchorWallet.publicKey,\n    )\n  )[0];\n\n  const ticket = fairLaunch.ticket.data;\n\n  const fairLaunchLotteryBitmap = ( //@ts-ignore\n    await getFairLaunchLotteryBitmap(fairLaunch.state.tokenMint)\n  )[0];\n\n  const buyerTokenAccount = (\n    await getAtaForMint(\n      //@ts-ignore\n      fairLaunch.state.tokenMint,\n      anchorWallet.publicKey,\n    )\n  )[0];\n\n  if (ticket?.amount.gt(fairLaunch.state.currentMedian)) {\n    console.log(\n      'Adjusting down...',\n      ticket?.amount.toNumber(),\n      fairLaunch.state.currentMedian.toNumber(),\n    );\n    const { remainingAccounts, instructions, signers } =\n      await getSetupForTicketing(\n        fairLaunch.program,\n        fairLaunch.state.currentMedian.toNumber(),\n        anchorWallet,\n        fairLaunch,\n        fairLaunchTicket,\n      );\n    await fairLaunch.program.rpc.adjustTicket(fairLaunch.state.currentMedian, {\n      accounts: {\n        fairLaunchTicket,\n        fairLaunch: fairLaunch.id,\n        fairLaunchLotteryBitmap,\n        //@ts-ignore\n        treasury: fairLaunch.state.treasury,\n        systemProgram: anchor.web3.SystemProgram.programId,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n      },\n      __private: { logAccounts: true },\n      instructions: instructions.length > 0 ? instructions : undefined,\n      remainingAccounts: [\n        {\n          pubkey: anchorWallet.publicKey,\n          isSigner: true,\n          isWritable: true,\n        },\n        ...remainingAccounts,\n      ],\n      signers,\n    });\n  }\n\n  const accountExists =\n    await fairLaunch.program.provider.connection.getAccountInfo(\n      buyerTokenAccount,\n    );\n\n  const instructions = !accountExists\n    ? [\n        createAssociatedTokenAccountInstruction(\n          buyerTokenAccount,\n          anchorWallet.publicKey,\n          anchorWallet.publicKey,\n          //@ts-ignore\n          fairLaunch.state.tokenMint,\n        ),\n      ]\n    : [];\n\n  await fairLaunch.program.rpc.punchTicket({\n    accounts: {\n      fairLaunchTicket,\n      fairLaunch: fairLaunch.id,\n      fairLaunchLotteryBitmap,\n      payer: anchorWallet.publicKey,\n      buyerTokenAccount,\n      //@ts-ignore\n      tokenMint: fairLaunch.state.tokenMint,\n      tokenProgram: TOKEN_PROGRAM_ID,\n    },\n    instructions: instructions.length > 0 ? instructions : undefined,\n  });\n};\n\nexport const getFairLaunchTicket = async (\n  tokenMint: anchor.web3.PublicKey,\n  buyer: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), buyer.toBuffer()],\n    FAIR_LAUNCH_PROGRAM,\n  );\n};\n\nexport const getFairLaunchLotteryBitmap = async (\n  tokenMint: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), Buffer.from('lottery')],\n    FAIR_LAUNCH_PROGRAM,\n  );\n};\n\nconst getSetupForTicketing = async (\n  anchorProgram: anchor.Program,\n  amount: number,\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount | undefined,\n  ticketKey: anchor.web3.PublicKey,\n): Promise<{\n  remainingAccounts: {\n    pubkey: anchor.web3.PublicKey | null;\n    isWritable: boolean;\n    isSigner: boolean;\n  }[];\n  instructions: TransactionInstruction[];\n  signers: anchor.web3.Keypair[];\n  amountLamports: number;\n}> => {\n  if (!fairLaunch) {\n    return {\n      remainingAccounts: [],\n      instructions: [],\n      signers: [],\n      amountLamports: 0,\n    };\n  }\n  const ticket = fairLaunch.ticket;\n\n  const remainingAccounts = [];\n  const instructions = [];\n  const signers = [];\n\n  let amountLamports = 0;\n  //@ts-ignore\n  if (!fairLaunch.state.treasuryMint) {\n    if (!ticket && amount === 0) {\n      amountLamports = fairLaunch.state.data.priceRangeStart.toNumber();\n    } else {\n      amountLamports = Math.ceil(amount * LAMPORTS_PER_SOL);\n    }\n  } else {\n    const transferAuthority = anchor.web3.Keypair.generate();\n    signers.push(transferAuthority);\n    // NOTE this token impl will not work till you get decimal mantissa and multiply...\n    /// ex from cli wont work since you dont have a Signer, but an anchor.Wallet\n    /*\n    const token = new Token(\n        anchorProgram.provider.connection,\n        //@ts-ignore\n        fairLaunchObj.treasuryMint,\n        TOKEN_PROGRAM_ID,\n        walletKeyPair,\n      );\n      const mintInfo = await token.getMintInfo();\n      amountNumber = Math.ceil(amountNumber * 10 ** mintInfo.decimals);\n    */\n    instructions.push(\n      Token.createApproveInstruction(\n        TOKEN_PROGRAM_ID,\n        //@ts-ignore\n        fairLaunch.state.treasuryMint,\n        transferAuthority.publicKey,\n        anchorWallet.publicKey,\n        [],\n        //@ts-ignore\n\n        // TODO: get mint decimals\n        amountNumber + fairLaunch.state.data.fees.toNumber(),\n      ),\n    );\n\n    remainingAccounts.push({\n      //@ts-ignore\n      pubkey: fairLaunch.state.treasuryMint,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: (\n        await getAtaForMint(\n          //@ts-ignore\n          fairLaunch.state.treasuryMint,\n          anchorWallet.publicKey,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: transferAuthority.publicKey,\n      isWritable: false,\n      isSigner: true,\n    });\n    remainingAccounts.push({\n      pubkey: TOKEN_PROGRAM_ID,\n      isWritable: false,\n      isSigner: false,\n    });\n  }\n\n  if (ticket.data) {\n    const [fairLaunchTicketSeqLookup, seqBump] =\n      await getFairLaunchTicketSeqLookup(\n        fairLaunch.state.tokenMint,\n        ticket.data?.seq,\n      );\n\n    const seq = await anchorProgram.provider.connection.getAccountInfo(\n      fairLaunchTicketSeqLookup,\n    );\n    if (!seq) {\n      instructions.push(\n        await anchorProgram.instruction.createTicketSeq(seqBump, {\n          accounts: {\n            fairLaunchTicketSeqLookup,\n            fairLaunch: fairLaunch.id,\n            fairLaunchTicket: ticketKey,\n            payer: anchorWallet.publicKey,\n            systemProgram: anchor.web3.SystemProgram.programId,\n            rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n          },\n          signers: [],\n        }),\n      );\n    }\n  }\n\n  return {\n    remainingAccounts,\n    instructions,\n    signers,\n    amountLamports,\n  };\n};\n\nexport const receiveRefund = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount | undefined,\n) => {\n  if (!fairLaunch) {\n    return;\n  }\n\n  const buyerTokenAccount = (\n    await getAtaForMint(fairLaunch.state.tokenMint, anchorWallet.publicKey)\n  )[0];\n\n  const transferAuthority = anchor.web3.Keypair.generate();\n\n  const signers = [transferAuthority];\n  const instructions = [\n    Token.createApproveInstruction(\n      TOKEN_PROGRAM_ID,\n      buyerTokenAccount,\n      transferAuthority.publicKey,\n      anchorWallet.publicKey,\n      [],\n      1,\n    ),\n  ];\n\n  const remainingAccounts = [];\n\n  if (fairLaunch.state.treasuryMint) {\n    remainingAccounts.push({\n      pubkey: fairLaunch.state.treasuryMint,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: (\n        await getAtaForMint(\n          fairLaunch.state.treasuryMint,\n          anchorWallet.publicKey,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n  }\n\n  console.log(\n    'tfr',\n    fairLaunch.state.treasury.toBase58(),\n    anchorWallet.publicKey.toBase58(),\n    buyerTokenAccount.toBase58(),\n  );\n  await fairLaunch.program.rpc.receiveRefund({\n    accounts: {\n      fairLaunch: fairLaunch.id,\n      treasury: fairLaunch.state.treasury,\n      buyer: anchorWallet.publicKey,\n      buyerTokenAccount,\n      transferAuthority: transferAuthority.publicKey,\n      tokenMint: fairLaunch.state.tokenMint,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n\n    __private: { logAccounts: true },\n    remainingAccounts,\n    instructions,\n    signers,\n  });\n};\nexport const purchaseTicket = async (\n  amount: number,\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount | undefined,\n) => {\n  if (!fairLaunch) {\n    return;\n  }\n\n  const ticket = fairLaunch.ticket.data;\n\n  const [fairLaunchTicket, bump] = await getFairLaunchTicket(\n    //@ts-ignore\n    fairLaunch.state.tokenMint,\n    anchorWallet.publicKey,\n  );\n\n  const { remainingAccounts, instructions, signers, amountLamports } =\n    await getSetupForTicketing(\n      fairLaunch.program,\n      amount,\n      anchorWallet,\n      fairLaunch,\n      fairLaunchTicket,\n    );\n\n  if (ticket) {\n    const fairLaunchLotteryBitmap = //@ts-ignore\n    (await getFairLaunchLotteryBitmap(fairLaunch.state.tokenMint))[0];\n    console.log(\n      'Anchor wallet',\n      anchorWallet.publicKey.toBase58(),\n      amountLamports,\n    );\n    await fairLaunch.program.rpc.adjustTicket(new anchor.BN(amountLamports), {\n      accounts: {\n        fairLaunchTicket,\n        fairLaunch: fairLaunch.id,\n        fairLaunchLotteryBitmap,\n        //@ts-ignore\n        treasury: fairLaunch.state.treasury,\n        systemProgram: anchor.web3.SystemProgram.programId,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n      },\n      __private: { logAccounts: true },\n      remainingAccounts: [\n        {\n          pubkey: anchorWallet.publicKey,\n          isSigner: true,\n          isWritable: true,\n        },\n        ...remainingAccounts,\n      ],\n      signers,\n      instructions: instructions.length > 0 ? instructions : undefined,\n    });\n\n    return;\n  }\n  try {\n    console.log('Amount', amountLamports);\n    await fairLaunch.program.rpc.purchaseTicket(\n      bump,\n      new anchor.BN(amountLamports),\n      {\n        accounts: {\n          fairLaunchTicket,\n          fairLaunch: fairLaunch.id,\n          //@ts-ignore\n          treasury: fairLaunch.state.treasury,\n          buyer: anchorWallet.publicKey,\n          payer: anchorWallet.publicKey,\n          systemProgram: anchor.web3.SystemProgram.programId,\n          rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n          clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n        },\n        //__private: { logAccounts: true },\n        remainingAccounts,\n        signers,\n        instructions: instructions.length > 0 ? instructions : undefined,\n      },\n    );\n  } catch (e) {\n    console.log(e);\n    throw e;\n  }\n};\n\nexport const withdrawFunds = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount | undefined,\n) => {\n  if (!fairLaunch) {\n    return;\n  }\n\n  // TODO: create sequence ticket\n\n  const remainingAccounts = [];\n\n  //@ts-ignore\n  if (fairLaunch.state.treasuryMint) {\n    remainingAccounts.push({\n      //@ts-ignore\n      pubkey: fairLaunch.state.treasuryMint,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: (\n        await getAtaForMint(\n          //@ts-ignore\n          fairLaunch.state.treasuryMint,\n          anchorWallet.publicKey,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: TOKEN_PROGRAM_ID,\n      isWritable: false,\n      isSigner: false,\n    });\n  }\n\n  await fairLaunch.program.rpc.withdrawFunds({\n    accounts: {\n      fairLaunch: fairLaunch.id,\n      // @ts-ignore\n      treasury: fairLaunch.state.treasury,\n      authority: anchorWallet.publicKey,\n      // @ts-ignore\n      tokenMint: fairLaunch.state.tokenMint,\n      systemProgram: anchor.web3.SystemProgram.programId,\n    },\n    remainingAccounts,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}
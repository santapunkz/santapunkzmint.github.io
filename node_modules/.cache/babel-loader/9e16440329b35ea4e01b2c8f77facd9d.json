{"ast":null,"code":"import _slicedToArray from\"D:\\\\Solana\\\\metaplex\\\\metaplex-master\\\\js\\\\packages\\\\fair-launch\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _asyncToGenerator from\"D:\\\\Solana\\\\metaplex\\\\metaplex-master\\\\js\\\\packages\\\\fair-launch\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _regeneratorRuntime from\"D:\\\\Solana\\\\metaplex\\\\metaplex-master\\\\js\\\\packages\\\\fair-launch\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import*as anchor from'@project-serum/anchor';import{MintLayout,TOKEN_PROGRAM_ID,Token}from'@solana/spl-token';import{SystemProgram}from'@solana/web3.js';import{sendTransactions}from'./connection';import{CIVIC,getAtaForMint,getNetworkExpire,getNetworkToken,SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID}from'./utils';export var CANDY_MACHINE_PROGRAM=new anchor.web3.PublicKey('cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ');var TOKEN_METADATA_PROGRAM_ID=new anchor.web3.PublicKey('metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s');export var awaitTransactionSignatureConfirmation=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(txid,timeout,connection){var commitment,queryStatus,done,status,subId,_args3=arguments;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:commitment=_args3.length>3&&_args3[3]!==undefined?_args3[3]:'recent';queryStatus=_args3.length>4&&_args3[4]!==undefined?_args3[4]:false;done=false;status={slot:0,confirmations:0,err:null};subId=0;_context3.next=7;return new Promise(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(resolve,reject){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setTimeout(function(){if(done){return;}done=true;console.log('Rejecting for timeout...');reject({timeout:true});},timeout);case 1:if(!(!done&&queryStatus)){_context2.next=7;break;}// eslint-disable-next-line no-loop-func\n_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var signatureStatuses;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return connection.getSignatureStatuses([txid]);case 3:signatureStatuses=_context.sent;status=signatureStatuses&&signatureStatuses.value[0];if(!done){if(!status){console.log('REST null result for',txid,status);}else if(status.err){console.log('REST error for',txid,status);done=true;reject(status.err);}else if(!status.confirmations){console.log('REST no confirmations for',txid,status);}else{console.log('REST confirmation for',txid,status);done=true;resolve(status);}}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);if(!done){console.log('REST connection error: txid',txid,_context.t0);}case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}))();_context2.next=5;return sleep(2000);case 5:_context2.next=1;break;case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x4,_x5){return _ref2.apply(this,arguments);};}());case 7:status=_context3.sent;//@ts-ignore\nif(connection._signatureSubscriptions[subId]){connection.removeSignatureListener(subId);}done=true;console.log('Returning status',status);return _context3.abrupt(\"return\",status);case 12:case\"end\":return _context3.stop();}}},_callee3);}));return function awaitTransactionSignatureConfirmation(_x,_x2,_x3){return _ref.apply(this,arguments);};}();/* export */var createAssociatedTokenAccountInstruction=function createAssociatedTokenAccountInstruction(associatedTokenAddress,payer,walletAddress,splTokenMintAddress){var keys=[{pubkey:payer,isSigner:true,isWritable:true},{pubkey:associatedTokenAddress,isSigner:false,isWritable:true},{pubkey:walletAddress,isSigner:false,isWritable:false},{pubkey:splTokenMintAddress,isSigner:false,isWritable:false},{pubkey:anchor.web3.SystemProgram.programId,isSigner:false,isWritable:false},{pubkey:TOKEN_PROGRAM_ID,isSigner:false,isWritable:false},{pubkey:anchor.web3.SYSVAR_RENT_PUBKEY,isSigner:false,isWritable:false}];return new anchor.web3.TransactionInstruction({keys:keys,programId:SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,data:Buffer.from([])});};export var getCandyMachineState=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(anchorWallet,candyMachineId,connection){var provider,idl,program,state,itemsAvailable,itemsRedeemed,itemsRemaining;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:provider=new anchor.Provider(connection,anchorWallet,{preflightCommitment:'recent'});_context4.next=3;return anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM,provider);case 3:idl=_context4.sent;program=new anchor.Program(idl,CANDY_MACHINE_PROGRAM,provider);_context4.next=7;return program.account.candyMachine.fetch(candyMachineId);case 7:state=_context4.sent;itemsAvailable=state.data.itemsAvailable.toNumber();itemsRedeemed=state.itemsRedeemed.toNumber();itemsRemaining=itemsAvailable-itemsRedeemed;return _context4.abrupt(\"return\",{id:candyMachineId,program:program,state:{itemsAvailable:itemsAvailable,itemsRedeemed:itemsRedeemed,itemsRemaining:itemsRemaining,isSoldOut:itemsRemaining===0,isActive:state.data.goLiveDate.toNumber()<new Date().getTime()/1000&&(state.endSettings?state.endSettings.endSettingType.date?state.endSettings.number.toNumber()>new Date().getTime()/1000:itemsRedeemed<state.endSettings.number.toNumber():true),goLiveDate:state.data.goLiveDate,treasury:state.wallet,tokenMint:state.tokenMint,gatekeeper:state.data.gatekeeper,endSettings:state.data.endSettings,whitelistMintSettings:state.data.whitelistMintSettings,hiddenSettings:state.data.hiddenSettings,price:state.data.price}});case 12:case\"end\":return _context4.stop();}}},_callee4);}));return function getCandyMachineState(_x6,_x7,_x8){return _ref4.apply(this,arguments);};}();var getMasterEdition=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(mint){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer(),Buffer.from('edition')],TOKEN_METADATA_PROGRAM_ID);case 2:return _context5.abrupt(\"return\",_context5.sent[0]);case 3:case\"end\":return _context5.stop();}}},_callee5);}));return function getMasterEdition(_x9){return _ref5.apply(this,arguments);};}();var getMetadata=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(mint){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('metadata'),TOKEN_METADATA_PROGRAM_ID.toBuffer(),mint.toBuffer()],TOKEN_METADATA_PROGRAM_ID);case 2:return _context6.abrupt(\"return\",_context6.sent[0]);case 3:case\"end\":return _context6.stop();}}},_callee6);}));return function getMetadata(_x10){return _ref6.apply(this,arguments);};}();export var getCandyMachineCreator=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(candyMachine){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return anchor.web3.PublicKey.findProgramAddress([Buffer.from('candy_machine'),candyMachine.toBuffer()],CANDY_MACHINE_PROGRAM);case 2:return _context7.abrupt(\"return\",_context7.sent);case 3:case\"end\":return _context7.stop();}}},_callee7);}));return function getCandyMachineCreator(_x11){return _ref7.apply(this,arguments);};}();export var mintOneToken=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(candyMachine,payer){var mint,userTokenAccountAddress,userPayingAccountAddress,candyMachineAddress,remainingAccounts,signers,cleanupInstructions,instructions,_mint,whitelistToken,whitelistBurnAuthority,exists,transferAuthority,metadataAddress,masterEdition,_yield$getCandyMachin,_yield$getCandyMachin2,candyMachineCreator,creatorBump;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:mint=anchor.web3.Keypair.generate();_context8.next=3;return getAtaForMint(mint.publicKey,payer);case 3:userTokenAccountAddress=_context8.sent[0];if(!candyMachine.state.tokenMint){_context8.next=10;break;}_context8.next=7;return getAtaForMint(candyMachine.state.tokenMint,payer);case 7:_context8.t0=_context8.sent[0];_context8.next=11;break;case 10:_context8.t0=payer;case 11:userPayingAccountAddress=_context8.t0;candyMachineAddress=candyMachine.id;remainingAccounts=[];signers=[mint];cleanupInstructions=[];_context8.t1=anchor.web3.SystemProgram;_context8.t2=payer;_context8.t3=mint.publicKey;_context8.t4=MintLayout.span;_context8.next=22;return candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(MintLayout.span);case 22:_context8.t5=_context8.sent;_context8.t6=TOKEN_PROGRAM_ID;_context8.t7={fromPubkey:_context8.t2,newAccountPubkey:_context8.t3,space:_context8.t4,lamports:_context8.t5,programId:_context8.t6};_context8.t8=_context8.t1.createAccount.call(_context8.t1,_context8.t7);_context8.t9=Token.createInitMintInstruction(TOKEN_PROGRAM_ID,mint.publicKey,0,payer,payer);_context8.t10=createAssociatedTokenAccountInstruction(userTokenAccountAddress,payer,payer,mint.publicKey);_context8.t11=Token.createMintToInstruction(TOKEN_PROGRAM_ID,mint.publicKey,userTokenAccountAddress,payer,[],1);instructions=[_context8.t8,_context8.t9,_context8.t10,_context8.t11];if(!candyMachine.state.gatekeeper){_context8.next=45;break;}_context8.t12=remainingAccounts;_context8.next=34;return getNetworkToken(payer,candyMachine.state.gatekeeper.gatekeeperNetwork);case 34:_context8.t13=_context8.sent[0];_context8.t14={pubkey:_context8.t13,isWritable:true,isSigner:false};_context8.t12.push.call(_context8.t12,_context8.t14);if(!candyMachine.state.gatekeeper.expireOnUse){_context8.next=45;break;}remainingAccounts.push({pubkey:CIVIC,isWritable:false,isSigner:false});_context8.t15=remainingAccounts;_context8.next=42;return getNetworkExpire(candyMachine.state.gatekeeper.gatekeeperNetwork);case 42:_context8.t16=_context8.sent[0];_context8.t17={pubkey:_context8.t16,isWritable:false,isSigner:false};_context8.t15.push.call(_context8.t15,_context8.t17);case 45:if(!candyMachine.state.whitelistMintSettings){_context8.next=60;break;}_mint=new anchor.web3.PublicKey(candyMachine.state.whitelistMintSettings.mint);_context8.next=49;return getAtaForMint(_mint,payer);case 49:whitelistToken=_context8.sent[0];remainingAccounts.push({pubkey:whitelistToken,isWritable:true,isSigner:false});if(!candyMachine.state.whitelistMintSettings.mode.burnEveryTime){_context8.next=60;break;}whitelistBurnAuthority=anchor.web3.Keypair.generate();remainingAccounts.push({pubkey:_mint,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:whitelistBurnAuthority.publicKey,isWritable:false,isSigner:true});signers.push(whitelistBurnAuthority);_context8.next=58;return candyMachine.program.provider.connection.getAccountInfo(whitelistToken);case 58:exists=_context8.sent;if(exists){instructions.push(Token.createApproveInstruction(TOKEN_PROGRAM_ID,whitelistToken,whitelistBurnAuthority.publicKey,payer,[],1));cleanupInstructions.push(Token.createRevokeInstruction(TOKEN_PROGRAM_ID,whitelistToken,payer,[]));}case 60:if(candyMachine.state.tokenMint){transferAuthority=anchor.web3.Keypair.generate();signers.push(transferAuthority);remainingAccounts.push({pubkey:userPayingAccountAddress,isWritable:true,isSigner:false});remainingAccounts.push({pubkey:transferAuthority.publicKey,isWritable:false,isSigner:true});instructions.push(Token.createApproveInstruction(TOKEN_PROGRAM_ID,userPayingAccountAddress,transferAuthority.publicKey,payer,[],candyMachine.state.price.toNumber()));cleanupInstructions.push(Token.createRevokeInstruction(TOKEN_PROGRAM_ID,userPayingAccountAddress,payer,[]));}_context8.next=63;return getMetadata(mint.publicKey);case 63:metadataAddress=_context8.sent;_context8.next=66;return getMasterEdition(mint.publicKey);case 66:masterEdition=_context8.sent;_context8.next=69;return getCandyMachineCreator(candyMachineAddress);case 69:_yield$getCandyMachin=_context8.sent;_yield$getCandyMachin2=_slicedToArray(_yield$getCandyMachin,2);candyMachineCreator=_yield$getCandyMachin2[0];creatorBump=_yield$getCandyMachin2[1];_context8.t18=instructions;_context8.next=76;return candyMachine.program.instruction.mintNft(creatorBump,{accounts:{candyMachine:candyMachineAddress,candyMachineCreator:candyMachineCreator,payer:payer,wallet:candyMachine.state.treasury,mint:mint.publicKey,metadata:metadataAddress,masterEdition:masterEdition,mintAuthority:payer,updateAuthority:payer,tokenMetadataProgram:TOKEN_METADATA_PROGRAM_ID,tokenProgram:TOKEN_PROGRAM_ID,systemProgram:SystemProgram.programId,rent:anchor.web3.SYSVAR_RENT_PUBKEY,clock:anchor.web3.SYSVAR_CLOCK_PUBKEY,recentBlockhashes:anchor.web3.SYSVAR_RECENT_BLOCKHASHES_PUBKEY,instructionSysvarAccount:anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY},remainingAccounts:remainingAccounts.length>0?remainingAccounts:undefined});case 76:_context8.t19=_context8.sent;_context8.t18.push.call(_context8.t18,_context8.t19);_context8.prev=78;_context8.next=81;return sendTransactions(candyMachine.program.provider.connection,candyMachine.program.provider.wallet,[instructions,cleanupInstructions],[signers,[]]);case 81:return _context8.abrupt(\"return\",_context8.sent.txs.map(function(t){return t.txid;}));case 84:_context8.prev=84;_context8.t20=_context8[\"catch\"](78);console.log(_context8.t20);case 87:return _context8.abrupt(\"return\",[]);case 88:case\"end\":return _context8.stop();}}},_callee8,null,[[78,84]]);}));return function mintOneToken(_x12,_x13){return _ref8.apply(this,arguments);};}();export var shortenAddress=function shortenAddress(address){var chars=arguments.length>1&&arguments[1]!==undefined?arguments[1]:4;return\"\".concat(address.slice(0,chars),\"...\").concat(address.slice(-chars));};var sleep=function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});};","map":{"version":3,"sources":["D:/Solana/metaplex/metaplex-master/js/packages/fair-launch/src/candy-machine.ts"],"names":["anchor","MintLayout","TOKEN_PROGRAM_ID","Token","SystemProgram","sendTransactions","CIVIC","getAtaForMint","getNetworkExpire","getNetworkToken","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","CANDY_MACHINE_PROGRAM","web3","PublicKey","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","programId","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","Provider","preflightCommitment","Program","fetchIdl","idl","program","account","candyMachine","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","id","isSoldOut","isActive","goLiveDate","Date","getTime","endSettings","endSettingType","date","number","treasury","wallet","tokenMint","gatekeeper","whitelistMintSettings","hiddenSettings","price","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getCandyMachineCreator","mintOneToken","Keypair","generate","publicKey","userTokenAccountAddress","userPayingAccountAddress","candyMachineAddress","remainingAccounts","signers","cleanupInstructions","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","createInitMintInstruction","createMintToInstruction","instructions","gatekeeperNetwork","push","expireOnUse","whitelistToken","mode","burnEveryTime","whitelistBurnAuthority","getAccountInfo","exists","createApproveInstruction","createRevokeInstruction","transferAuthority","metadataAddress","masterEdition","candyMachineCreator","creatorBump","instruction","mintNft","accounts","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","rent","clock","SYSVAR_CLOCK_PUBKEY","recentBlockhashes","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","instructionSysvarAccount","SYSVAR_INSTRUCTIONS_PUBKEY","length","undefined","txs","map","t","shortenAddress","address","chars","slice","ms"],"mappings":"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","sourcesContent":["import * as anchor from '@project-serum/anchor';\n\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\nimport { SystemProgram } from '@solana/web3.js';\nimport { sendTransactions } from './connection';\n\nimport {\n  CIVIC,\n  getAtaForMint,\n  getNetworkExpire,\n  getNetworkToken,\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n} from './utils';\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  'cndy3Z4yapfJBmL3ShUp5exZKqR3z33thTzeNMm2gRZ',\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n);\n\ninterface CandyMachineState {\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  treasury: anchor.web3.PublicKey;\n  tokenMint: anchor.web3.PublicKey;\n  isSoldOut: boolean;\n  isActive: boolean;\n  goLiveDate: anchor.BN;\n  price: anchor.BN;\n  gatekeeper: null | {\n    expireOnUse: boolean;\n    gatekeeperNetwork: anchor.web3.PublicKey;\n  };\n  endSettings: null | [number, anchor.BN];\n  whitelistMintSettings: null | {\n    mode: any;\n    mint: anchor.web3.PublicKey;\n    presale: boolean;\n    discountPrice: null | anchor.BN;\n  };\n  hiddenSettings: null | {\n    name: string;\n    uri: string;\n    hash: Uint8Array;\n  };\n}\n\nexport interface CandyMachineAccount {\n  id: anchor.web3.PublicKey;\n  program: anchor.Program;\n  state: CandyMachineState;\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = 'recent',\n  queryStatus = false,\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log('Rejecting for timeout...');\n      reject({ timeout: true });\n    }, timeout);\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log('REST null result for', txid, status);\n            } else if (status.err) {\n              console.log('REST error for', txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log('REST no confirmations for', txid, status);\n            } else {\n              console.log('REST confirmation for', txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log('REST connection error: txid', txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log('Returning status', status);\n  return status;\n};\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey,\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n};\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineAccount> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: 'recent',\n  });\n\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  return {\n    id: candyMachineId,\n    program,\n    state: {\n      itemsAvailable,\n      itemsRedeemed,\n      itemsRemaining,\n      isSoldOut: itemsRemaining === 0,\n      isActive:\n        state.data.goLiveDate.toNumber() < new Date().getTime() / 1000 &&\n        (state.endSettings\n          ? state.endSettings.endSettingType.date\n            ? state.endSettings.number.toNumber() > new Date().getTime() / 1000\n            : itemsRedeemed < state.endSettings.number.toNumber()\n          : true),\n      goLiveDate: state.data.goLiveDate,\n      treasury: state.wallet,\n      tokenMint: state.tokenMint,\n      gatekeeper: state.data.gatekeeper,\n      endSettings: state.data.endSettings,\n      whitelistMintSettings: state.data.whitelistMintSettings,\n      hiddenSettings: state.data.hiddenSettings,\n      price: state.data.price,\n    },\n  };\n};\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from('edition'),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport const getCandyMachineCreator = async (\n  candyMachine: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('candy_machine'), candyMachine.toBuffer()],\n    CANDY_MACHINE_PROGRAM,\n  );\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachineAccount,\n  payer: anchor.web3.PublicKey,\n): Promise<(string | undefined)[]> => {\n  const mint = anchor.web3.Keypair.generate();\n\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const userPayingAccountAddress = candyMachine.state.tokenMint\n    ? (await getAtaForMint(candyMachine.state.tokenMint, payer))[0]\n    : payer;\n\n  const candyMachineAddress = candyMachine.id;\n  const remainingAccounts = [];\n  const signers: anchor.web3.Keypair[] = [mint];\n  const cleanupInstructions = [];\n  const instructions = [\n    anchor.web3.SystemProgram.createAccount({\n      fromPubkey: payer,\n      newAccountPubkey: mint.publicKey,\n      space: MintLayout.span,\n      lamports:\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\n          MintLayout.span,\n        ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    Token.createInitMintInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      0,\n      payer,\n      payer,\n    ),\n    createAssociatedTokenAccountInstruction(\n      userTokenAccountAddress,\n      payer,\n      payer,\n      mint.publicKey,\n    ),\n    Token.createMintToInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      userTokenAccountAddress,\n      payer,\n      [],\n      1,\n    ),\n  ];\n\n  if (candyMachine.state.gatekeeper) {\n    remainingAccounts.push({\n      pubkey: (\n        await getNetworkToken(\n          payer,\n          candyMachine.state.gatekeeper.gatekeeperNetwork,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n    if (candyMachine.state.gatekeeper.expireOnUse) {\n      remainingAccounts.push({\n        pubkey: CIVIC,\n        isWritable: false,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: (\n          await getNetworkExpire(\n            candyMachine.state.gatekeeper.gatekeeperNetwork,\n          )\n        )[0],\n        isWritable: false,\n        isSigner: false,\n      });\n    }\n  }\n  if (candyMachine.state.whitelistMintSettings) {\n    const mint = new anchor.web3.PublicKey(\n      candyMachine.state.whitelistMintSettings.mint,\n    );\n\n    const whitelistToken = (await getAtaForMint(mint, payer))[0];\n    remainingAccounts.push({\n      pubkey: whitelistToken,\n      isWritable: true,\n      isSigner: false,\n    });\n\n    if (candyMachine.state.whitelistMintSettings.mode.burnEveryTime) {\n      const whitelistBurnAuthority = anchor.web3.Keypair.generate();\n\n      remainingAccounts.push({\n        pubkey: mint,\n        isWritable: true,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: whitelistBurnAuthority.publicKey,\n        isWritable: false,\n        isSigner: true,\n      });\n      signers.push(whitelistBurnAuthority);\n      const exists =\n        await candyMachine.program.provider.connection.getAccountInfo(\n          whitelistToken,\n        );\n      if (exists) {\n        instructions.push(\n          Token.createApproveInstruction(\n            TOKEN_PROGRAM_ID,\n            whitelistToken,\n            whitelistBurnAuthority.publicKey,\n            payer,\n            [],\n            1,\n          ),\n        );\n        cleanupInstructions.push(\n          Token.createRevokeInstruction(\n            TOKEN_PROGRAM_ID,\n            whitelistToken,\n            payer,\n            [],\n          ),\n        );\n      }\n    }\n  }\n\n  if (candyMachine.state.tokenMint) {\n    const transferAuthority = anchor.web3.Keypair.generate();\n\n    signers.push(transferAuthority);\n    remainingAccounts.push({\n      pubkey: userPayingAccountAddress,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: transferAuthority.publicKey,\n      isWritable: false,\n      isSigner: true,\n    });\n\n    instructions.push(\n      Token.createApproveInstruction(\n        TOKEN_PROGRAM_ID,\n        userPayingAccountAddress,\n        transferAuthority.publicKey,\n        payer,\n        [],\n        candyMachine.state.price.toNumber(),\n      ),\n    );\n    cleanupInstructions.push(\n      Token.createRevokeInstruction(\n        TOKEN_PROGRAM_ID,\n        userPayingAccountAddress,\n        payer,\n        [],\n      ),\n    );\n  }\n  const metadataAddress = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const [candyMachineCreator, creatorBump] = await getCandyMachineCreator(\n    candyMachineAddress,\n  );\n\n  instructions.push(\n    await candyMachine.program.instruction.mintNft(creatorBump, {\n      accounts: {\n        candyMachine: candyMachineAddress,\n        candyMachineCreator,\n        payer: payer,\n        wallet: candyMachine.state.treasury,\n        mint: mint.publicKey,\n        metadata: metadataAddress,\n        masterEdition,\n        mintAuthority: payer,\n        updateAuthority: payer,\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        systemProgram: SystemProgram.programId,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n        recentBlockhashes: anchor.web3.SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n        instructionSysvarAccount: anchor.web3.SYSVAR_INSTRUCTIONS_PUBKEY,\n      },\n      remainingAccounts:\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\n    }),\n  );\n\n  try {\n    return (\n      await sendTransactions(\n        candyMachine.program.provider.connection,\n        candyMachine.program.provider.wallet,\n        [instructions, cleanupInstructions],\n        [signers, []],\n      )\n    ).txs.map(t => t.txid);\n  } catch (e) {\n    console.log(e);\n  }\n\n  return [];\n};\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n"]},"metadata":{},"sourceType":"module"}